{"version":3,"sources":["webpack:///./index.js"],"names":["constructor","selector","targetDate","this","document","querySelector","day","hour","min","sec","pad","value","String","padStart","updateDateForTimer","curentDate","Date","now","getTime","innerHTML","getDate","getMonth","getFullYear","days","Math","floor","hours","mins","secs","textContent","start","setInterval"],"mappings":"kHAAA,iBAiDc,IAhDd,MACIA,aAAY,SAAEC,EAAF,WAAYC,IACpBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAaA,EAElBC,KAAKG,IAAMF,SAASC,cAAc,2BAClCF,KAAKI,KAAOH,SAASC,cAAc,4BACnCF,KAAKK,IAAMJ,SAASC,cAAc,2BAClCF,KAAKM,IAAML,SAASC,cAAc,2BAItCK,IAAKC,GACD,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAGrCC,qBACI,MAAMC,EAAaC,KAAKC,MAExB,GAAGF,GAAYZ,KAAKD,WAAWgB,UAC3Bf,KAAKF,SAASkB,UAAa,mBAAkBhB,KAAKD,WAAWkB,aAAajB,KAAKD,WAAWmB,WAAW,KAAKlB,KAAKD,WAAWoB,oBAEvH,CAEP,IAAIC,EAAOC,KAAKC,OAAOtB,KAAKD,WAAWgB,UAAYH,GAA7B,OAClBW,EAAQF,KAAKC,OAAQtB,KAAKD,WAAWgB,UAAYH,GAA7B,MAAD,MACnBY,EAAOH,KAAKC,OAAQtB,KAAKD,WAAWgB,UAAYH,GAA7B,KAAD,KAClBa,EAAOJ,KAAKC,OAAQtB,KAAKD,WAAWgB,UAAYH,GAA7B,IAA0D,KAEjFZ,KAAKG,IAAIuB,YAAc1B,KAAKO,IAAIa,GAChCpB,KAAKI,KAAKsB,YAAc1B,KAAKO,IAAIgB,GACjCvB,KAAKK,IAAIqB,YAAc1B,KAAKO,IAAIiB,GAChCxB,KAAKM,IAAIoB,YAAc1B,KAAKO,IAAIkB,IAKpCE,QAEI3B,KAAKW,qBAEciB,YAAY,KAC3B5B,KAAKW,sBACN,OAKsB,CAC/Bb,SAAU,WACVC,WAAY,IAAIc,KAAK,kBAGjBc,U","file":"main.a1863dd86a5b5301edaa.js","sourcesContent":["import './styles.css';\nclass CountdownTimer {\n    constructor({ selector, targetDate} ) {\n        this.selector = document.querySelector(selector);\n        this.targetDate = targetDate;\n        //ссылки на значения таймера\n        this.day = document.querySelector('span[data-value=\"days\"]');\n        this.hour = document.querySelector('span[data-value=\"hours\"]');\n        this.min = document.querySelector('span[data-value=\"mins\"]');\n        this.sec = document.querySelector('span[data-value=\"secs\"]');\n    }\n\n  //вспомагательная функция, добавляет нолик к единичному значению числа на таймере\n    pad (value) {\n        return String(value).padStart(2, '0');\n    }\n    //фуенкция обновляет данныедля таймера\n    updateDateForTimer () {\n        const curentDate = Date.now();\n\n        if(curentDate>=this.targetDate.getTime()){\n            this.selector.innerHTML = `We have reached ${this.targetDate.getDate()}.${this.targetDate.getMonth()+1}.${this.targetDate.getFullYear()}`;\n            return ;\n        } else {\n        \n        let days = Math.floor((this.targetDate.getTime() - curentDate)/ (1000 * 60 * 60 * 24));\n        let hours = Math.floor(((this.targetDate.getTime() - curentDate) % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let mins = Math.floor(((this.targetDate.getTime() - curentDate) % (1000 * 60 * 60)) / (1000 * 60));\n        let secs = Math.floor(((this.targetDate.getTime() - curentDate) % (1000 * 60)) / 1000);\n\n        this.day.textContent = this.pad(days); \n        this.hour.textContent = this.pad(hours);\n        this.min.textContent = this.pad(mins);\n        this.sec.textContent = this.pad(secs);\n        }\n    };\n\n    //фуекция которая запускает таймер\n    start () {\n        //записываем обновленные значения для загрузки страницы\n        this.updateDateForTimer();\n\n        const intervalID = setInterval(()=>{\n            this.updateDateForTimer();\n        }, 1000);\n    }\n}\n  \n\nconst timer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date('Jun 01, 2021'),\n});\n\ntimer.start();\n"],"sourceRoot":""}